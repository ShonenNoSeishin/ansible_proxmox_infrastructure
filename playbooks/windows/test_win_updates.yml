---
- name: Test de mise à jour Windows avec win_updates
  hosts: machines_windows:&proxmox_all_running
  vars:
    windows_common_collect_network_info: true  # Infos réseau détaillées
    windows_common_show_system_info: false     # Pas d'affichage verbose
  roles:
    - windows_common # Utilisation du rôle windows_common pour les tâches de base
  gather_facts: true

  tasks:
    # Section 1: Installation complète des mises à jour
    - name: Install all updates and reboot as many times as needed
      ansible.windows.win_updates:
        category_names: '*'
        reboot: true
      tags:
        - full_update
        - reboot

    # Section 2: Installation avec configuration SSH spéciale
    - name: Set a server alive interval during update stage for the ssh connection plugin
      ansible.windows.win_updates:
        category_names: '*'
        reboot: true
      vars:
        # This can be set in a few ways, see the ssh connection plugin for more
        # information. ControlMaster should be disabled to ensure the new timeout
        # value is applied for this connection instead of through the cached
        # connection.
        ansible_ssh_args: -o ControlMaster=no -o ServerAliveInterval=30
      tags:
        - ssh_config
        - reboot

    # Section 3: Installation de catégories spécifiques avec privilèges élevés
    - name: Install all security, critical, and rollup updates without a scheduled task
      ansible.windows.win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - UpdateRollups
      become: true
      become_method: runas
      become_user: SYSTEM
      tags:
        - security_updates
        - system_context

    # Section 4: Recherche seule (pas d'installation)
    - name: Search-only, return list of found updates (if any), log to C:\ansible_wu.txt
      ansible.windows.win_updates:
        category_names: SecurityUpdates
        state: searched
        log_path: C:\ansible_wu.txt
      register: update_search_results
      tags:
        - search_only
        - security_updates

    - name: Display found updates
      ansible.builtin.debug:
        var: update_search_results.updates
      when: update_search_results.updates is defined
      tags:
        - search_only
        - debug

    # Section 5: Installation des mises à jour de sécurité avec redémarrage automatique
    - name: Install all security updates with automatic reboots
      ansible.windows.win_updates:
        category_names:
          - SecurityUpdates
        reboot: true
      tags:
        - security_updates
        - reboot

    # Section 6: Installation de mises à jour spécifiques par KB
    - name: Install only particular updates based on the KB numbers
      ansible.windows.win_updates:
        category_names:
          - SecurityUpdates
        accept_list:
          - KB4056892
          - KB4073117
      tags:
        - specific_kb
        - security_updates

    # Section 7: Exclusion de mises à jour spécifiques
    - name: Exclude updates based on the update title
      ansible.windows.win_updates:
        category_names: '*'
        reject_list:
          - Windows Malicious Software Removal Tool for Windows
          - '\d{4}-\d{2} Cumulative Update for Windows Server 2016'
      tags:
        - exclude_updates
        - custom_filter

    # Section 8: Installation avec timeout de redémarrage étendu
    - name: Ensure we wait long enough for the updates to be applied during reboot
      ansible.windows.win_updates:
        reboot: true
        reboot_timeout: 3600
        category_names:
          - SecurityUpdates
          - CriticalUpdates
      tags:
        - extended_timeout
        - reboot

    # Section 9: Téléchargement sans installation
    - name: Search and download Windows updates without installing them
      ansible.windows.win_updates:
        state: downloaded
        category_names:
          - SecurityUpdates
          - CriticalUpdates
      register: download_results
      tags:
        - download_only

    - name: Display download results
      ansible.builtin.debug:
        msg: |
          Updates downloaded: {{ download_results.updates | length if download_results.updates is defined else 0 }}
          Reboot required: {{ download_results.reboot_required | default(false) }}
      when: download_results is defined
      tags:
        - download_only
        - debug

    # Section 10: Rapport final
    - name: Generate update summary report
      ansible.builtin.set_fact:
        update_report:
          machine: "{{ inventory_hostname }}"
          connectivity: "{{ windows_connectivity_status | default('UNKNOWN') }}"
          system_info: "{{ windows_system_info.ComputerName | default('Unknown') }}"
          windows_version: "{{ windows_system_info.WindowsVersion | default('Unknown') }}"
          last_search_updates: "{{ update_search_results.updates | length if update_search_results.updates is defined else 'N/A' }}"
          downloaded_updates: "{{ download_results.updates | length if download_results.updates is defined else 'N/A' }}"
          test_date: "{{ ansible_date_time.iso8601 }}"
      tags:
        - report
        - summary

    - name: Display update summary
      ansible.builtin.debug:
        msg: |
          ==================== RAPPORT WINDOWS UPDATES ====================
          Machine: {{ update_report.machine }} ({{ update_report.system_info }})
          OS: {{ update_report.windows_version }}
          Connectivité: {{ update_report.connectivity }}
          Date du test: {{ update_report.test_date }}
          
          RÉSULTATS:
          - Mises à jour trouvées: {{ update_report.last_search_updates }}
          - Mises à jour téléchargées: {{ update_report.downloaded_updates }}
          
          REMARQUE: Ce playbook contient plusieurs exemples de win_updates.
          En production, utilisez seulement les sections nécessaires.
          ================================================================
      tags:
        - report
        - summary